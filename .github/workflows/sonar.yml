name: Sonar
on:
  push:
    paths:
      - 'packages/**'
    branches:
      - main # or the name of your main branch
jobs:
  build:
    name: Coverage and Sonar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - run: npm i -g lerna@6 pnpm
      - run: lerna bootstrap
      - run: lerna run build
      - run: cd starter/nuxt-admin && pnpm install --no-frozen-lockfile
      - run: cd starter/nuxt-auth && pnpm install --no-frozen-lockfile
      - run: cd starter/nuxt-commerce && pnpm install --no-frozen-lockfile
      - run: cd starter/nuxt-minimal && pnpm install --no-frozen-lockfile
      - run: cd starter/vue && pnpm install --no-frozen-lockfile
      - run: cd examples/nuxt-layer && pnpm install --no-frozen-lockfile
      - run: yarn coverage
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_USER: ${{ secrets.SONAR_USER }}
          SONAR_PASSWORD: ${{ secrets.SONAR_PASSWORD }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
